#!/bin/bash

set -e

# remove some packages to conserve space

for PACKAGE in aptitude info totem firmware-netronome firmware-qcom-soc firmware-atheros firmware-libertas pocketsphinx-en-us raspi-firmware ibus-data firmware-amd-graphics firmware-nvidia-tesla-gsp mesa-vulkan-drivers gstreamer1.0-plugins-bad gnome-sushi gnome-software gnome-online-accounts gnome-accessibility-themes live-task-non-free-firmware-server live-task-non-free-firmware-pc exim4-base nvidia-kernel-common
do
        if ! apt-get remove --purge --yes "${PACKAGE}"
        then
                echo "WARNING: ${PACKAGE} isn't installed"
        else
                echo "OK: ${PACKAGE} purged"
        fi
done

apt-get autoremove --yes || true

# nice-to-have packages. if you want to reduce the size of the build,
# comment out this entire for-loop (BEGIN/END)

######################
# BEGIN NICE-TO-HAVE #
######################

# begin vscode pre-install

wget -qO- https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > packages.microsoft.gpg
sudo install -D -o root -g root -m 644 packages.microsoft.gpg /etc/apt/keyrings/packages.microsoft.gpg
sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main" > /etc/apt/sources.list.d/vscode.list'
rm -f packages.microsoft.gpg

# begin fish pre-install

echo 'deb http://download.opensuse.org/repositories/shells:/fish:/release:/3/Debian_12/ /' | sudo tee /etc/apt/sources.list.d/shells:fish:release:3.list
curl -fsSL https://download.opensuse.org/repositories/shells:fish:release:3/Debian_12/Release.key | gpg --dearmor | sudo tee /etc/apt/trusted.gpg.d/shells_fish_release_3.gpg > /dev/null

# install step for all above (note packages)
sudo apt-get update && sudo apt-get install --yes "code" "fish"

# atuin install
bash <(curl --proto '=https' --tlsv1.2 -sSf https://setup.atuin.sh)

sudo useradd -m -s /usr/bin/fish bookworm || true
sudo chown -Rv bookworm:bookworm /home/bookworm
echo "bookworm:live" | sudo chpasswd

####################
# END NICE-TO-HAVE #
####################

# Removing assumed crap

rm -rf /usr/share/help
rm -rf /usr/share/doc
rm -rf /usr/share/locale
rm -rf /var/lib/apt
rm -rf /var/cache/*

# disable timers unsuitable for live environments

for TIMER in apt-daily-upgrade apt-daily dpkg-db-backup fstrim man-db
do
        systemctl disable ${TIMER}.timer --now || true
done

# set dark mode and wallpaper in gnome, then compile schemas (ie apply)

cat <<EOF >> /usr/share/glib-2.0/schemas/theme-override.gschema.override
[org.gnome.desktop.interface]
gtk-theme='Adwaita-dark'
color-scheme='prefer-dark'

[org.gnome.desktop.background]
picture-uri='file:///usr/share/backgrounds/gnome/blobs-l.svg'

EOF

glib-compile-schemas /usr/share/glib-2.0/schemas/

# Removing unused files
find . -name *~ -print0 | xargs -0 rm -f

# Truncating logs
for FILE in $(find /var/log/ -type f)
do
        : > "${FILE}"
done
